#include "user.h"
#include "channel.h"
#include "connection.h"

// =============================================================================
// Determine status level of this user.
// -----------------------------------------------------------------------------
IRCChannel::Status IRCUser::channel_status (IRCChannel* chan)
{	return chan->effective_status_of (this);
}

// =============================================================================
// -----------------------------------------------------------------------------
QString IRCUser::userhost() const
{	return fmt ("%1!%2@%3", nick(), user(), host());
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser::Flags IRCUser::operator| (Flags f) const
{	return flags() | f;
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser IRCUser::operator|= (Flags f)
{	set_flags (flags() | f);
	return *this;
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser::Flags IRCUser::operator& (Flags f) const
{	return flags() & f;
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser IRCUser::operator&= (Flags f)
{	set_flags (flags() & f);
	return *this;
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser::Flags IRCUser::operator^ (Flags f) const
{	return flags() ^ f;
}

// =============================================================================
// -----------------------------------------------------------------------------
IRCUser IRCUser::operator^= (Flags f)
{	set_flags (flags() ^ f);
	return *this;
}

// =============================================================================
// -----------------------------------------------------------------------------
QString IRCUser::string_rep() const
{	return fmt ("%1 (%2@%3)", nick(), user(), host());
}

// =============================================================================
// -----------------------------------------------------------------------------
void IRCUser::add_known_channel (IRCChannel* chan)
{	m_channels << chan;
}

// =============================================================================
// -----------------------------------------------------------------------------
void IRCUser::del_known_channel (IRCChannel* chan)
{	m_channels.removeOne (chan);
}